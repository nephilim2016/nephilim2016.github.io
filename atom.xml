<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zues GPR</title>
  
  <subtitle>Ground Penetrating Radar Data Processing and Imaging Algorithms</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-01-05T02:46:06.396Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Zeus GPR</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GPR File Formats, Part 3 (IMPULSE)</title>
    <link href="http://example.com/2024/01/05/IMPULSE/"/>
    <id>http://example.com/2024/01/05/IMPULSE/</id>
    <published>2024-01-05T17:00:00.000Z</published>
    <updated>2024-01-05T02:46:06.396Z</updated>
    
    <content type="html"><![CDATA[<p>Stay tuned! We have some exciting developments in the pipeline that we can’t wait to share with you. Coming soon…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Stay tuned! We have some exciting developments in the pipeline that we can’t wait to share with you. Coming soon…&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Algorithm" scheme="http://example.com/categories/Algorithm/"/>
    
    
    <category term="GPR Data" scheme="http://example.com/tags/GPR-Data/"/>
    
  </entry>
  
  <entry>
    <title>GPR File Formats, Part 2 (MALA)</title>
    <link href="http://example.com/2024/01/04/MALA/"/>
    <id>http://example.com/2024/01/04/MALA/</id>
    <published>2024-01-04T17:00:00.000Z</published>
    <updated>2024-01-11T09:14:37.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Understanding-GPR-File-Formats-Part-1-A-Comprehensive-Guide-to-GSSI-Data-Reading-and-Writing-Methods"><a href="#Understanding-GPR-File-Formats-Part-1-A-Comprehensive-Guide-to-GSSI-Data-Reading-and-Writing-Methods" class="headerlink" title="Understanding GPR File Formats, Part 1: A Comprehensive Guide to GSSI Data Reading and Writing Methods"></a>Understanding GPR File Formats, Part 1: A Comprehensive Guide to GSSI Data Reading and Writing Methods</h1><p><a href="https://www.guidelinegeo.com/mala-ground-penetrating-radar-gpr/">MALÅ </a>is the worlds premier provider of ground penetration radar (GPR) solutions, enabling professionals to create, analyze and transform vast amounts of complex data into easily understandable representations of the subsurface. With a history of high-tech innovation going back to the 1930s, MALÅ technology allows faster, safer decisions to be made while reducing project costs and protecting public safety.</p><h2 id="MALA-File-Format"><a href="#MALA-File-Format" class="headerlink" title="MALA File Format"></a>MALA File Format</h2><p>The primary file format used by MALA for GPR data is the RAD file and RD3/RD7 file format. The header with metadata and the data is induvidual. Key characteristics of this format include:</p><p>-Proprietary Nature: The format of data is specific to MALA and is designed to work seamlessly with their software and hardware.<br>Header Information: THe header with metadata is a individual file named .RAD, such as survey parameters, date, time, and geographic information.<br>-Data Composition: A RD3/RD7 file typically contains raw radar data, including the amplitude of the returned signal, which reflects subsurface structures.<br>-Compatibility: To read or analyze the files, users generally rely on MALA’s software or other specialized GPR data processing software capable of interpreting the format.</p><h2 id="Data-Reading-and-Writing"><a href="#Data-Reading-and-Writing" class="headerlink" title="Data Reading and Writing"></a>Data Reading and Writing</h2><p>In this discussion, we will focus on reading and writing the RAD and RD3/RD7 files separately, since the header information and data information are stored in separate files.</p><h3 id="Data-Reading"><a href="#Data-Reading" class="headerlink" title="Data Reading"></a>Data Reading</h3><p>MALA data files are comprised of two key components respectivity: Header Information and Data Composition. The format of the Header Information is stored utilize the string format and separated by : ,The detailed in the following Table 1.</p><table><thead><tr><th>Parameters</th><th>Discription</th></tr></thead><tbody><tr><td>SAMPLES</td><td>samples per scan</td></tr><tr><td>FREQUENCY</td><td>central frequency of attena</td></tr><tr><td>FREQUENCY STEPS</td><td>-</td></tr><tr><td>SIGNAL POSITION</td><td>-</td></tr><tr><td>RAW SIGNAL POSITION</td><td>-</td></tr><tr><td>DISTANCE FLAG</td><td>-</td></tr><tr><td>PROGRAM FLAG</td><td>-</td></tr><tr><td>EXTERNAL FLAG</td><td>-</td></tr><tr><td>TIME INTERVAL</td><td>-</td></tr><tr><td>DISTANCE INTERVAL</td><td>distance interval per trace</td></tr><tr><td>OPERATOR</td><td>-</td></tr><tr><td>CUSTOMER</td><td>-</td></tr><tr><td>SITE</td><td>-</td></tr><tr><td>ANTENNAS</td><td>-</td></tr><tr><td>ANTENNA ORIENTATION</td><td>-</td></tr><tr><td>ANTENNAS SEPARATION</td><td>-</td></tr><tr><td>COMMENT</td><td>-</td></tr><tr><td>TIMEWINDOW</td><td>time duration (ns)</td></tr><tr><td>STACKS</td><td>-</td></tr><tr><td>STACK EXPONENT</td><td>-</td></tr><tr><td>LAST TRACE</td><td>number of traces</td></tr><tr><td>STOP POSITION</td><td>starting measured position (m)</td></tr><tr><td>SYSTEM CALIBRATION</td><td>-</td></tr><tr><td>START POSITION</td><td>stoping measured position (m)</td></tr></tbody></table><p>In the ensuing discussion, we explore the data composition. Our initial step involves determining the stored format of the GPR data by the difference of the extension of the filename. The .rd3 means the data is stored by int16 format, and the .rd7 represent the data is stored by int32 format.The data is then transformed into a two-dimensional array, aligned with the ‘info[‘samples’]’ value, also mentioned in the Header Information.</p><p>Finally, as depicted in Figure 2, we successfully read the complete data. Following this, we delve into the specifics of data:</p><p>-The spatial distance covered by the data can be calculated using data.shape[1]*float(info[‘diatance_interval’]), which applies to the distance survey method.<br>-The time duration represented in the data is directly obtained from info[‘timewindow’].<br>-Additionally, the relationship between the time duration and depth can be expressed through the next equation, providing a crucial link between these two key parameters, but should offer the relative permittivity by user.</p><p>Enclosed is the principal Python code utilized for reading RAD files.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># readRAD</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">readGPRhdr</span>(<span class="params">filename</span>):</span><br><span class="line">    info=&#123;&#125;</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            strsp=line.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">            <span class="comment"># print(strsp)</span></span><br><span class="line">            info[strsp[<span class="number">0</span>]]=strsp[<span class="number">1</span>].rstrip()</span><br><span class="line">    <span class="keyword">return</span> info</span><br></pre></td></tr></table></figure><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># read RD3/RD7</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">readMALA</span>(<span class="params">file_name</span>):</span><br><span class="line">    info=readGPRhdr(file_name+<span class="string">&#x27;.rad&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        filename=file_name+<span class="string">&#x27;.rd3&#x27;</span></span><br><span class="line">        data=np.fromfile(filename,dtype=np.int16)  </span><br><span class="line">        nrows=<span class="built_in">int</span>(<span class="built_in">len</span>(data)/<span class="built_in">int</span>(info[<span class="string">&#x27;SAMPLES&#x27;</span>]))</span><br><span class="line">        data=(np.asmatrix(data.reshape(nrows,<span class="built_in">int</span>(info[<span class="string">&#x27;SAMPLES&#x27;</span>])))).transpose()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        filename=file_name+<span class="string">&#x27;.rd7&#x27;</span></span><br><span class="line">        data=np.fromfile(filename,dtype=np.int32)    </span><br><span class="line">        nrows=<span class="built_in">int</span>(<span class="built_in">len</span>(data)/<span class="built_in">int</span>(info[<span class="string">&#x27;SAMPLES&#x27;</span>]))</span><br><span class="line">        data=(np.asmatrix(data.reshape(nrows,<span class="built_in">int</span>(info[<span class="string">&#x27;SAMPLES&#x27;</span>])))).transpose()</span><br><span class="line">    <span class="keyword">return</span> np.array(data),info</span><br></pre></td></tr></table></figure></p><h3 id="Data-Writting"><a href="#Data-Writting" class="headerlink" title="Data Writting"></a>Data Writting</h3><p>By simply reversing the data reading process, we can facilitate the writing of the data. It is crucial to note that data intended for writing must be converted from a float fromat to an integer format. Additionally, the data type must correspond to the value specified by the extension of the file names. The core code patch for this operation is as follows:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># write RD7</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">writeMALA</span>(<span class="params">file_name,info,data_input</span>):</span><br><span class="line">    headerFile=file_name+<span class="string">&#x27;.rad&#x27;</span></span><br><span class="line">    filename=file_name+<span class="string">&#x27;.rd7&#x27;</span></span><br><span class="line">    writeGPRhdr(headerFile,info)</span><br><span class="line"></span><br><span class="line">    data_input=data_input.astype(<span class="string">&#x27;int32&#x27;</span>).transpose().flatten()</span><br><span class="line">        </span><br><span class="line">    data_input.tofile(filename)</span><br></pre></td></tr></table></figure></p><h2 id="Dataset"><a href="#Dataset" class="headerlink" title="Dataset"></a>Dataset</h2><p>Ultimately, we are pleased to showcase a selection of our GPR datasets, amassing over 500 sets in total, meticulously gathered using MALA radar system. This extensive dataset is available for download from our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Understanding-GPR-File-Formats-Part-1-A-Comprehensive-Guide-to-GSSI-Data-Reading-and-Writing-Methods&quot;&gt;&lt;a href=&quot;#Understanding-GPR-Fi</summary>
      
    
    
    
    <category term="Algorithm" scheme="http://example.com/categories/Algorithm/"/>
    
    
    <category term="GPR Data" scheme="http://example.com/tags/GPR-Data/"/>
    
  </entry>
  
  <entry>
    <title>GPR File Formats, Part 1 (GSSI)</title>
    <link href="http://example.com/2024/01/03/GSSI/"/>
    <id>http://example.com/2024/01/03/GSSI/</id>
    <published>2024-01-03T17:00:00.000Z</published>
    <updated>2024-01-11T12:09:53.680Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Understanding-GPR-File-Formats-Part-1-A-Comprehensive-Guide-to-GSSI-Data-Reading-and-Writing-Methods"><a href="#Understanding-GPR-File-Formats-Part-1-A-Comprehensive-Guide-to-GSSI-Data-Reading-and-Writing-Methods" class="headerlink" title="Understanding GPR File Formats, Part 1: A Comprehensive Guide to GSSI Data Reading and Writing Methods"></a>Understanding GPR File Formats, Part 1: A Comprehensive Guide to GSSI Data Reading and Writing Methods</h1><p><a href="https://www.linkedin.com/company/geophysical-survey-systems-inc.">Geophysical Survey Systems, Inc. (GSSI)</a> is a world leader in the development, manufacture, and sale of ground penetrating radar (GPR) equipment, primarily used for geophysical, geological, environmental, and forensic investigations. GSSI’s GPR systems are well-regarded for their versatility, reliability, and accuracy in subsurface probing and mapping.</p><h2 id="GSSI-File-Format"><a href="#GSSI-File-Format" class="headerlink" title="GSSI File Format"></a>GSSI File Format</h2><p>The primary file format used by GSSI for GPR data is the DZT file format. Key characteristics of this format include:</p><ul><li>Proprietary Nature: The DZT format is specific to GSSI and is designed to work seamlessly with their software and hardware.</li><li>Header Information: Each file includes a header with metadata, such as survey parameters, date, time, and geographic information.</li><li>Data Composition: A DZT file typically contains raw radar data, including the amplitude of the returned signal, which reflects subsurface structures.</li><li>Compatibility: To read or analyze DZT files, users generally rely on GSSI’s RADAN software or other specialized GPR data processing software capable of interpreting the DZT format.</li></ul><h2 id="Data-Reading-and-Writing"><a href="#Data-Reading-and-Writing" class="headerlink" title="Data Reading and Writing"></a>Data Reading and Writing</h2><p>In this discussion, we primarily concentrate on the methodologies for reading and writing DZT files, without delving into the details of DZX files.</p><h3 id="Data-Reading"><a href="#Data-Reading" class="headerlink" title="Data Reading"></a>Data Reading</h3><p>DZT data files are comprised of two key components: Header Information and Data Composition. The format of the Header Information is detailed in the following <a href="#table1">Table 1</a>.</p><div align="center">Table 1: Data Type Specifications</div><table><thead><tr><th style="text-align:left">Data Types</th><th style="text-align:left">Parameters</th><th style="text-align:center">Discription</th><th style="text-align:center">File Object Start Position</th><th style="text-align:center">Standard Size</th></tr></thead><tbody><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_tag</td><td style="text-align:center">-</td><td style="text-align:center">00</td><td style="text-align:center">2</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_data</td><td style="text-align:center">offset to data</td><td style="text-align:center">02</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_nsamp</td><td style="text-align:center">samples per scan</td><td style="text-align:center">04</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_bits</td><td style="text-align:center">bits per data word</td><td style="text-align:center">06</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_zero</td><td style="text-align:center">-</td><td style="text-align:center">08</td><td style="text-align:center">2</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_sps</td><td style="text-align:center">scans per second</td><td style="text-align:center">10</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_spm</td><td style="text-align:center">scans per meter</td><td style="text-align:center">14</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_mpm</td><td style="text-align:center">-</td><td style="text-align:center">18</td><td style="text-align:center">4</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_position</td><td style="text-align:center">starting point position (ns)</td><td style="text-align:center">22</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_range</td><td style="text-align:center">time duration (ns)</td><td style="text-align:center">26</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_npass</td><td style="text-align:center">-</td><td style="text-align:center">30</td><td style="text-align:center">2</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_create</td><td style="text-align:center">date created</td><td style="text-align:center">32</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_modif</td><td style="text-align:center">date modified</td><td style="text-align:center">36</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_rgain</td><td style="text-align:center">-</td><td style="text-align:center">40</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_nrgain</td><td style="text-align:center">number of points in gain function</td><td style="text-align:center">42</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_text</td><td style="text-align:center">-</td><td style="text-align:center">44</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_ntext</td><td style="text-align:center">-</td><td style="text-align:center">46</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_proc</td><td style="text-align:center">-</td><td style="text-align:center">48</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_nproc</td><td style="text-align:center">-</td><td style="text-align:center">50</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_nchan</td><td style="text-align:center">number of channels</td><td style="text-align:center">52</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_epsr</td><td style="text-align:center">relative permittivity</td><td style="text-align:center">54</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_top</td><td style="text-align:center">starting point position (m)</td><td style="text-align:center">58</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_depth</td><td style="text-align:center">measured depth</td><td style="text-align:center">62</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_reserved</td><td style="text-align:center">-</td><td style="text-align:center">66</td><td style="text-align:center">18</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_spp</td><td style="text-align:center">-</td><td style="text-align:center">84</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_linemun</td><td style="text-align:center">-</td><td style="text-align:center">86</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_start_x</td><td style="text-align:center">-</td><td style="text-align:center">88</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_start_y</td><td style="text-align:center">-</td><td style="text-align:center">90</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_end_x</td><td style="text-align:center">-</td><td style="text-align:center">92</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_end_y</td><td style="text-align:center">-</td><td style="text-align:center">94</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>char</code></td><td style="text-align:left">rh_lineorder</td><td style="text-align:center">-</td><td style="text-align:center">96</td><td style="text-align:center">01</td></tr><tr><td style="text-align:left"><code>char</code></td><td style="text-align:left">rh_dtype</td><td style="text-align:center">-</td><td style="text-align:center">97</td><td style="text-align:center">01</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_antname</td><td style="text-align:center">antenna name</td><td style="text-align:center">98</td><td style="text-align:center">14</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_chanmask</td><td style="text-align:center">-</td><td style="text-align:center">112</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_name</td><td style="text-align:center">-</td><td style="text-align:center">114</td><td style="text-align:center">12</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_chksum</td><td style="text-align:center">check placeholder</td><td style="text-align:center">126</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_variable</td><td style="text-align:center">variables</td><td style="text-align:center">128</td><td style="text-align:center">896</td></tr></tbody></table><p>In the ensuing discussion, we explore the data composition. Our initial step involves bypassing the offset, followed by reading the data in accordance with the data type specified by the ‘info[‘rh_bits’]’ value, as detailed in the Header Information. The data is then transformed into a two-dimensional array, aligned with the ‘info[‘rh_nsamp’]’ value, also mentioned in the Header Information. A crucial aspect to highlight is that the first row of this 2D data delineates the trace indices, while the second row is characterized by uniform values, as depicted in <a href="#figure1">Figure 1</a>. Consequently, to ensure a precise analysis, it is imperative to remove these initial two rows from the 2D data.</p><figure id="figure1"><br>  <img src="/Figure/Part1Fig/Fig1.png" width="600" height="auto" alt="About" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 1: Visualization of the 2D Data Readed Using Python Code</figcaption><br></figure><p>Finally, as depicted in <a href="#figure2">Figure 2</a>, we successfully read the complete data. Following this, we delve into the specifics of data:</p><ul><li>The spatial distance covered by the data can be calculated using data.shape[1]/float(info[‘rh_spm’]), which applies to the distance survey method.</li><li>Alternatively, for the time survey method, the distance is determined by data.shape[1] / float(info[‘rh_sps’]).</li><li>The time duration represented in the data is directly obtained from info[‘rh_range’].</li><li>Similarly, the depth of the data is directly indicated by info[‘rh_depth’].</li><li>Additionally, the relationship between the time duration and depth can be expressed through the next equation, providing a crucial link between these two key parameters.<br>$$\mathrm{1.5e^8 \times info[‘rh\_range’] \times 1e^{-9} / \sqrt{info[‘rh\_epsr’]}}$$</li></ul><figure id="figure2"><br>  <img src="/Figure/Part1Fig/Fig2.png" width="600" height="auto" alt="About" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 2: Visualization of the Complete 2D Data Readed Using Python Code</figcaption><br></figure><p>The principal Python code utilized for reading DZT files is available for download from our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>.</p><h3 id="Data-Writting"><a href="#Data-Writting" class="headerlink" title="Data Writting"></a>Data Writting</h3><p>By simply reversing the data reading process, we can facilitate the writing of the data. It is crucial to note that data intended for writing must be converted from a float fromat to an integer format. Additionally, the data type must correspond to the value specified by ‘info[‘rh_bits’]’. </p><h2 id="Dataset"><a href="#Dataset" class="headerlink" title="Dataset"></a>Dataset</h2><p>Ultimately, we are pleased to showcase a selection of our GPR datasets, amassing over 500 sets in total, meticulously gathered using GSSI radar system. This extensive dataset is available for download from our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>.</p><figure id="figure3"><br>  <img src="/Figure/Part1Fig/Gallery.svg" width="800" height="auto" alt="Gallery" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 3: Gallery</figcaption><br></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Understanding-GPR-File-Formats-Part-1-A-Comprehensive-Guide-to-GSSI-Data-Reading-and-Writing-Methods&quot;&gt;&lt;a href=&quot;#Understanding-GPR-Fi</summary>
      
    
    
    
    <category term="Algorithm" scheme="http://example.com/categories/Algorithm/"/>
    
    
    <category term="GPR Data" scheme="http://example.com/tags/GPR-Data/"/>
    
  </entry>
  
</feed>
