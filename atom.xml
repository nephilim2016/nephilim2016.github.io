<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zues GPR</title>
  
  <subtitle>Ground Penetrating Radar Data Processing and Imaging Algorithms</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-01-12T14:01:08.543Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Zeus GPR</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GPR File Formats, Part 4 (EKKO)</title>
    <link href="http://example.com/2024/01/05/EKKO/"/>
    <id>http://example.com/2024/01/05/EKKO/</id>
    <published>2024-01-05T17:00:00.000Z</published>
    <updated>2024-01-12T14:01:08.543Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Understanding-GPR-File-Formats-Part-4-A-Comprehensive-Guide-to-EKKO-Data-Reading-and-Writing-Methods"><a href="#Understanding-GPR-File-Formats-Part-4-A-Comprehensive-Guide-to-EKKO-Data-Reading-and-Writing-Methods" class="headerlink" title="Understanding GPR File Formats, Part 4: A Comprehensive Guide to EKKO Data Reading and Writing Methods"></a>Understanding GPR File Formats, Part 4: A Comprehensive Guide to EKKO Data Reading and Writing Methods</h1><p>The <a href="https://www.sensoft.ca/">EKKO</a> has earned global recognition as a pioneering designer and manufacturer of Ground Penetrating Radar (GPR) instruments and software. Their expertise in developing GPR systems extends to a wide range of applications. This includes utility locating, concrete scanning, structural assessments, and mining and quarrying. EKKO’s technology also plays a crucial role in forensics, archaeology, and geology, as well as in geotechnical and environmental assessments. Additionally, their systems are instrumental in glaciology, agriculture, and the detection of Unexploded Ordnance (UXO). EKKO’s commitment to innovation and versatility makes it a leader in the field, offering solutions that cater to a diverse array of industries and research areas.</p><h2 id="EKKO-File-Format"><a href="#EKKO-File-Format" class="headerlink" title="EKKO File Format"></a>EKKO File Format</h2><p>EKKO’s GPR technology utilizes two specific file formats: the .hd for header information and the .dt1 for data. This format division, similar to the approach of MALÅ and IMPULSE, is characterized by several key features:<br>-Proprietary Design: These formats are custom-designed for seamless compatibility with EKKO’s unique hardware and software, ensuring a fluid and user-friendly experience.<br>-Header Information: Each dataset comes with a .hd file, which is rich in crucial metadata such as survey parameters, date, time, and geographic information. This metadata lays the groundwork for a comprehensive understanding of the data that follows.<br>-Data Composition: The .dt1 files serve as repositories for the raw radar data. They record the amplitude of the returned signals, offering a detailed information of the subsurface structures.<br>-Specialized Compatibility: While EKKO’s proprietary software, Sensor, is typically required to access and interpret these files, their design also allows for compatibility with other specialized GPR data processing software. This versatility ensures that EKKO’s formats can be utilized effectively across various platforms and applications.</p><h2 id="Data-Reading-and-Writing"><a href="#Data-Reading-and-Writing" class="headerlink" title="Data Reading and Writing"></a>Data Reading and Writing</h2><p>In our upcoming discussion, we will delve into the specific methodologies for reading and writing EKKO’s file formats. The distinct structure of these files necessitates a tailored approach for each type. We have the .hd files, which contain the header information, and the .dt1 files, dedicated to storing the data.</p><h3 id="Data-Reading"><a href="#Data-Reading" class="headerlink" title="Data Reading"></a>Data Reading</h3><p>EKKO’s data files are structured into two core components: Header Information and Data Composition. The Header Information is utilizing string values to encapsulate each data element. These individual pieces of information are distinctly separated by equal signs (=). For a detailed understanding of this organization, Table 1 below offers a thorough breakdown. In the Header Information of EKKO’s data files, the initial three lines play a pivotal role. The first line specifies the ‘type’ of data. Next, the ‘version’ of the data file is detailed in the second line. Finally, the third line captures the ‘survey date,’ anchoring the data in a specific temporal context. </p><div align="center">Table 1: Data Type Specifications of Header Information</div><table><thead><tr><th style="text-align:left">Parameters</th><th style="text-align:center">Discription</th></tr></thead><tbody><tr><td style="text-align:left">NUMBER OF TRACES</td><td style="text-align:center">number of traces</td></tr><tr><td style="text-align:left">NUMBER OF PTS/TRC</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">TIMEZERO AT POINT</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">TOTAL TIME WINDOW</td><td style="text-align:center">time duration (ns)</td></tr><tr><td style="text-align:left">STARTING POSITION</td><td style="text-align:center">start position of survey</td></tr><tr><td style="text-align:left">FINAL POSITION</td><td style="text-align:center">stop position of survey</td></tr><tr><td style="text-align:left">POSITION UNITS</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">NOMINAL FREQUENCY</td><td style="text-align:center">central frequency of antenna</td></tr><tr><td style="text-align:left">ANTENNA SEPARATIONN</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">PULSER VOLTAGE (V)</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">NUMBER OF STACKS</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">SURVEY MODE</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">STACKING TYPE</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">FREQUENCY</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">GPR SERIAL#</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">RX SERIAL#</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">DVL SERIAL#</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">TX SERIAL#</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">Processing</td><td style="text-align:center">record each processing</td></tr></tbody></table><p>In the next segment of our exploration, we will delve into the specifics of data composition within EKKO’s GPR system. This journey begins with an examination of the GPR data’s storage format, which presents a unique structure compared to the MALÅ and IMPULSE systems. In EKKO’s system, the .dt1 file format integrates header information within its data composition, as illustrated in <a href="#figure1">Figure 1</a>.</p><figure id="figure1"><br>  <img src="/Figure/Part4Fig/Fig2.png" width="600" height="auto" alt="About" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 1: Visualization of the Header Information within .dt File Reading by Using Python Code</figcaption><br></figure><p>Notably, the first 128 bytes of each trace represent the header information, followed by the raw GPR data, which occupies 2 * samples bytes. To gain deeper insights into this structure, refer to <a href="#figure2">Figure 2</a>, which details the components in the .dt1 file.</p><figure id="figure2"><br>  <img src="/Figure/Part4Fig/Fig3.svg" width="600" height="auto" alt="About" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 2: Data Type Specifications of Data Composition</figcaption><br></figure><p>Crucially, understanding this format allows us to extract key data: the samples value can be determined by bypassing the initial 8 bytes. Additionally, to ascertain the total number of traces, one can locate the trace number from the first 4 bytes of the last trace’s data. </p><p>Following our successful extraction of the complete dataset, as depicted in <a href="#figure3">Figure 3</a>, we now delve into detailing the specific characteristics of this data:<br>-The total spatial distance covered by the data is calculated through the formula float(info[‘FINAL POSITION’]) - float(info[‘STARTING POSITION’]), which applies to the distance survey method.<br>-The time duration represented within the data is conveniently obtained from info[‘TOTAL TIME WINDOW’].<br>-A pivotal aspect is the relationship between time duration and depth, which is defined by a specific equation. However, an important consideration in this calculation is the need for the input of relative permittivity. This crucial value, which must be supplied by the user, enables a more accurate interpretation of the depth information in relation to time.<br>$$\mathrm{1.5e^8 \times info[‘rh\_range’] \times 1e^{-9} / \sqrt{info[‘rh\_epsr’]}}$$</p><figure id="figure3"><br>  <img src="/Figure/Part4Fig/Fig1.svg" width="600" height="auto" alt="About" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 3: Visualization of the 2D Data Reading by Using Python Code</figcaption><br></figure><p>The principal Python code for reading these files, is available in our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>. We warmly invite you to join our channel, not just to access this valuable code, but also to connect with a community of enthusiasts and professionals in the field. It’s a space where like-minded individuals come together to share insights, exchange ideas, and collaborate on projects. </p><h3 id="Data-Writting"><a href="#Data-Writting" class="headerlink" title="Data Writting"></a>Data Writting</h3><p>In our forthcoming segment, we will write data back into the EKKO system. A pivotal element in this process is the transformation of data formats. Precisely, data intended for writing back needs to be converted from a floating-point format to an integer format. Moreover, it’s imperative to accurately handle the first 128 bytes of each trace. This segment, representing the header information within the data composition, must be correctly formatted and integrated. </p><h2 id="Dataset"><a href="#Dataset" class="headerlink" title="Dataset"></a>Dataset</h2><p>We are excited to share that a diverse collection of GPR datasets is now available on our platform. However, our current repository of EKKO file data is limited, primarily serving as a means to test our Python code. We recognize the immense value that a more extensive range of EKKO format data would bring to our community. Therefore, we extend a cordial invitation to those who possess a substantial collection of EKKO data: please consider sharing it with us. Your contribution can significantly enhance the depth and variety of our resources.</p><p>To explore these datasets or to access the Python code, we warmly welcome you to our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>. Here, you’ll find everything readily available for download. Join our growing community and engage with a wealth of GPR data and technical resources at your fingertips.</p><figure id="figure4"><br>  <img src="/Figure/Part4Fig/Gallery.svg" width="800" height="auto" alt="Gallery" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 4: Gallery</figcaption><br></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Understanding-GPR-File-Formats-Part-4-A-Comprehensive-Guide-to-EKKO-Data-Reading-and-Writing-Methods&quot;&gt;&lt;a href=&quot;#Understanding-GPR-Fi</summary>
      
    
    
    
    <category term="Algorithm" scheme="http://example.com/categories/Algorithm/"/>
    
    
    <category term="GPR Data" scheme="http://example.com/tags/GPR-Data/"/>
    
  </entry>
  
  <entry>
    <title>GPR File Formats, Part 3 (IMPULSE)</title>
    <link href="http://example.com/2024/01/04/IMPULSE/"/>
    <id>http://example.com/2024/01/04/IMPULSE/</id>
    <published>2024-01-04T17:00:00.000Z</published>
    <updated>2024-01-12T14:01:08.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Understanding-GPR-File-Formats-Part-3-A-Comprehensive-Guide-to-IMPULSE-Data-Reading-and-Writing-Methods"><a href="#Understanding-GPR-File-Formats-Part-3-A-Comprehensive-Guide-to-IMPULSE-Data-Reading-and-Writing-Methods" class="headerlink" title="Understanding GPR File Formats, Part 3: A Comprehensive Guide to IMPULSE Data Reading and Writing Methods"></a>Understanding GPR File Formats, Part 3: A Comprehensive Guide to IMPULSE Data Reading and Writing Methods</h1><p>The <a href="https://impulseradargpr.com/">IMPULSE</a> Ground Penetrating Radar (GPR) solutions represent the forefront of innovation, built upon the cutting-edge Real-Time Sampling (RTS) technology platform. These solutions stand out for their speed, offering exceptional bandwidth and dynamic range. Their modular design is tailored to meet specific user requirements, ensuring a perfect fit for various applications. With IMPULSE GPR solutions, you can expect a significant boost in productivity, thanks to the rapid collection of high-quality GPR data. </p><h2 id="IMPULSE-File-Format"><a href="#IMPULSE-File-Format" class="headerlink" title="IMPULSE File Format"></a>IMPULSE File Format</h2><p>IMPULSE’s GPR technology employs two distinct file formats: the .iprh for header information and the .iprb for data. This separation, similar to MALÅ’s approach, key characteristics of this format include:<br>-Proprietary Nature: Tailored specifically for IMPULSE’s unique hardware and software, these formats facilitate a smooth, seamless integration, enhancing the overall user experience.<br>-Header Information: Accompanying every data set is a .iprh file. Packed with critical metadata like survey parameters, date, time, and geographic details, it sets the stage for a thorough understanding of the subsequent data.<br>-Data Composition: The .iprb files are the repositories of raw radar data. These files capture the amplitude of returned signals, painting an intricate of the subsurface structures.<br>-Specialized Compatibility: Accessing and interpreting these files typically requires IMPULSE’s proprietary software, designed to work hand-in-glove with these formats. However, the versatility of these formats also allows for their interpretation through other specialized GPR data processing software.</p><h2 id="Data-Reading-and-Writing"><a href="#Data-Reading-and-Writing" class="headerlink" title="Data Reading and Writing"></a>Data Reading and Writing</h2><p>In our forthcoming segment, our focus will be on the distinct processes for reading and writing these files, a necessity dictated by their unique structure. Each file type, one for header information (.iprh) and the other for data (.iprb), is stored separately, emphasizing the need for a specialized approach to handling them. </p><h3 id="Data-Reading"><a href="#Data-Reading" class="headerlink" title="Data Reading"></a>Data Reading</h3><p>IMPULSE’s data files are organized into two fundamental components: Header Information and Data Composition. The Header Information is using string values to represent each data. These pieces of information are separated by colons (:), creating a clear and accessible format. For an in-depth understanding, <a href="#table1">Table 1</a> below provides a comprehensive breakdown of this structure, illustrating the precise organization and content of the Header Information in IMPULSE’s data files.</p><div align="center">Table 1: Data Type Specifications</div><table><thead><tr><th style="text-align:left">Parameters</th><th style="text-align:center">Discription</th></tr></thead><tbody><tr><td style="text-align:left">HEADER VERSION</td><td style="text-align:center">version of header</td></tr><tr><td style="text-align:left">DATA VERSION</td><td style="text-align:center">version of data</td></tr><tr><td style="text-align:left">DATE</td><td style="text-align:center">survey date</td></tr><tr><td style="text-align:left">START TIME</td><td style="text-align:center">start time of survey</td></tr><tr><td style="text-align:left">STOP TIME</td><td style="text-align:center">stop time of survey</td></tr><tr><td style="text-align:left">ANTENNA</td><td style="text-align:center">central frequence of antenna (MHz)</td></tr><tr><td style="text-align:left">ANTENNA SEPARATION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">SAMPLES</td><td style="text-align:center">samples per scan</td></tr><tr><td style="text-align:left">SIGNAL POSITION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">CLIPPED SAMPLES</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">RUNS</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">MAX STACKS</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">AUTOSTACKS</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">FREQUENCY</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">TIMEWINDOW</td><td style="text-align:center">time duration (ns)</td></tr><tr><td style="text-align:left">LAST TRACE</td><td style="text-align:center">number of traces</td></tr><tr><td style="text-align:left">TRIG SOURCE</td><td style="text-align:center">survey method</td></tr><tr><td style="text-align:left">TIME INTERVAL</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">DISTANCE INTERVAL</td><td style="text-align:center">distance interval per trace</td></tr><tr><td style="text-align:left">USER DISTANCE INTERVAL</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">STOP POSITION</td><td style="text-align:center">distance of survey</td></tr><tr><td style="text-align:left">WHEEL NAME</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">WHEEL CALIBRATION:</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">ZERO LEVEL</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">SOIL VELOCITY</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">PREPROCESSING</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">OPERATOR COMMENT</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">ANTENNA F/W</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">ANTENNA H/W</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">ANTENNA FPGA</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">ANTENNA SERIAL</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">ANTENNA NAME</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">SOFTWARE VERSION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">POSITIONING</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">CHANNELS</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">CHANNEL CONFIGURATION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">CH_X_OFFSET</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">CH_Y_OFFSET</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">MEASUREMENT DIRECTION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">RELATIVE DIRECTION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">RELATIVE DISTANCE</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">RELATIVE START</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">START TEMPERATURE</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">STOP TEMPERATURE</td><td style="text-align:center">-</td></tr></tbody></table><p>In the upcoming section of our discussion, we turn our attention to the details of data composition within IMPULSE’s GPR system. The initial step in this exploration involves deciphering the storage format of the GPR data. This is achieved by examining the info[‘DATA VERSION’] value within the info dictionary. A value of ‘16’ indicates that the data is stored in an int16 format, while a ‘32’ denotes an int32 format. Once the format is determined, the next step involves transforming this data into a 2D array. This transformation is carefully guided by two specific values: info[‘SAMPLES’] and info[‘LAST TRACE’] found in the info dictionary. </p><p>Following our successful extraction of the complete dataset, as depicted in <a href="#figure1">Figure 1</a>, we now delve into detailing the specific characteristics of this data:<br>-The total spatial distance covered by the data is calculated through the formula data.shape[1] * float(info[‘DISTANCE INTERVAL’]), which applies to the distance survey method.<br>-The time duration represented within the data is conveniently obtained from info[‘TIMEWINDOW’].<br>-A pivotal aspect is the relationship between time duration and depth, which is defined by a specific equation. However, an important consideration in this calculation is the need for the input of relative permittivity. This crucial value, which must be supplied by the user, enables a more accurate interpretation of the depth information in relation to time.<br>$$\mathrm{1.5e^8 \times info[‘rh\_range’] \times 1e^{-9} / \sqrt{info[‘rh\_epsr’]}}$$</p><figure id="figure1"><br>  <img src="/Figure/Part3Fig/Fig1.svg" width="600" height="auto" alt="About" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 1: Visualization of the 2D Data Reading by Using Python Code</figcaption><br></figure><p>The principal Python code for reading these files, is available in our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>. We warmly invite you to join our channel, not just to access this valuable code, but also to connect with a community of enthusiasts and professionals in the field. It’s a space where like-minded individuals come together to share insights, exchange ideas, and collaborate on projects. </p><h3 id="Data-Writting"><a href="#Data-Writting" class="headerlink" title="Data Writting"></a>Data Writting</h3><p>In our next discussion, we’ll explore how to reverse the data reading process, enabling the efficient writing of data back into IMPULSE files. A crucial aspect of this process is the need for a format transformation. Specifically, data prepared for writing should be converted from a floating-point format to an integer format. This step is essential to ensure the integrity and compatibility of the data with the IMPULSE system. Additionally, it’s vital to ensure that the data type chosen for writing corresponds exactly with the specifications outlined in the info[‘DATA VERSION’] value.</p><h2 id="Dataset"><a href="#Dataset" class="headerlink" title="Dataset"></a>Dataset</h2><p>We are excited to announce the availability of an extensive collection of GPR datasets on our platform. Over 20 datasets have been assembled using the IMPULSE GPR system, showcasing a wide array of subsurface imaging data. To access these datasets, we warmly invite you to visit our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>,  where they are readily available for download. </p><figure id="figure2"><br>  <img src="/Figure/Part3Fig/Gallery.jpg" width="800" height="auto" alt="Gallery" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 2: Gallery</figcaption><br></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Understanding-GPR-File-Formats-Part-3-A-Comprehensive-Guide-to-IMPULSE-Data-Reading-and-Writing-Methods&quot;&gt;&lt;a href=&quot;#Understanding-GPR</summary>
      
    
    
    
    <category term="Algorithm" scheme="http://example.com/categories/Algorithm/"/>
    
    
    <category term="GPR Data" scheme="http://example.com/tags/GPR-Data/"/>
    
  </entry>
  
  <entry>
    <title>GPR File Formats, Part 2 (MALA)</title>
    <link href="http://example.com/2024/01/04/MALA/"/>
    <id>http://example.com/2024/01/04/MALA/</id>
    <published>2024-01-04T17:00:00.000Z</published>
    <updated>2024-01-12T14:01:08.550Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Understanding-GPR-File-Formats-Part-2-A-Comprehensive-Guide-to-MALA-Data-Reading-and-Writing-Methods"><a href="#Understanding-GPR-File-Formats-Part-2-A-Comprehensive-Guide-to-MALA-Data-Reading-and-Writing-Methods" class="headerlink" title="Understanding GPR File Formats, Part 2: A Comprehensive Guide to MALA Data Reading and Writing Methods"></a>Understanding GPR File Formats, Part 2: A Comprehensive Guide to MALA Data Reading and Writing Methods</h1><p><a href="https://www.guidelinegeo.com/mala-ground-penetrating-radar-gpr/">MALÅ </a> is the worlds foremost provider of Ground Penetrating Radar (GPR) solutions, enabling professionals to interpret and transform complex subsurface data into clear, comprehensible visual representations. With a history of high-tech innovation going back to the 1930s, MALÅ technology allows faster, safer decisions to be made while reducing project costs and protecting public safety.</p><h2 id="MALA-File-Format"><a href="#MALA-File-Format" class="headerlink" title="MALA File Format"></a>MALA File Format</h2><p>MALÅ’s GPR technology primarily employs the .RAD file format, along with .RD3/.RD7 file formats, for its data. An integral feature of MALÅ’s GPR data format is the separation of the header file, which contains metadata, from the actual data file. Key characteristics of this format include:<br>-Proprietary Nature: Exclusively designed for compatibility with MALÅ’s own hardware and software, this format ensures seamless integration and optimal performance.<br>-Header Information: Each data set is accompanied by a .RAD file, serving as a unique header. This file contains crucial metadata such as survey parameters, date, time, and geographic information, providing a comprehensive context for the data.<br>-Data Composition: A .RD3/.RD7 file typically contains raw radar data. They record the amplitude of the returned signals, offering a detailed depiction of the subsurface structures.<br>-Specialized Compatibility: To access and interpret these files, users predominantly utilize MALÅ’s proprietary software. Alternatively, other specialized GPR data processing software capable of deciphering these unique formats can also be employed.</p><h2 id="Data-Reading-and-Writing"><a href="#Data-Reading-and-Writing" class="headerlink" title="Data Reading and Writing"></a>Data Reading and Writing</h2><p>In our upcoming discussion, we will delve into handling .RAD and .RD3/.RD7 files, specifically addressing their separate reading and writing processes. This approach is necessitated by the distinct storage of header information and data information in individual files. </p><h3 id="Data-Reading"><a href="#Data-Reading" class="headerlink" title="Data Reading"></a>Data Reading</h3><p>MALÅ’s data files are structured into two primary components: Header Information and Data Composition. The Header Information is formatted using string values, with each piece of data separated by colons (:). This organization is clearly outlined in <a href="#table1">Table 1</a> below.</p><div align="center">Table 1: Data Type Specifications</div><table><thead><tr><th style="text-align:left">Parameters</th><th style="text-align:center">Discription</th></tr></thead><tbody><tr><td style="text-align:left">SAMPLES</td><td style="text-align:center">samples per scan</td></tr><tr><td style="text-align:left">FREQUENCY</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">FREQUENCY STEPS</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">SIGNAL POSITION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">RAW SIGNAL POSITION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">DISTANCE FLAG</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">PROGRAM FLAG</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">EXTERNAL FLAG</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">TIME INTERVAL</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">DISTANCE INTERVAL</td><td style="text-align:center">distance interval per trace</td></tr><tr><td style="text-align:left">OPERATOR</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">CUSTOMER</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">SITE</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">ANTENNAS</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">ANTENNA ORIENTATION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">ANTENNAS SEPARATION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">COMMENT</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">TIMEWINDOW</td><td style="text-align:center">time duration (ns)</td></tr><tr><td style="text-align:left">STACKS</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">STACK EXPONENT</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">LAST TRACE</td><td style="text-align:center">number of traces</td></tr><tr><td style="text-align:left">STOP POSITION</td><td style="text-align:center">starting measured position (m)</td></tr><tr><td style="text-align:left">SYSTEM CALIBRATION</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">START POSITION</td><td style="text-align:center">stoping measured position (m)</td></tr></tbody></table><p>In the following section,  we explore the data composition. Our first step in this exploration is to identify the storage format of the GPR data, which can be determined by the file extension. Files with a .rd3 extension indicate that the data is stored in an int16 format, while those with a .rd7 extension signify an int32 format. Once identified, this data is then converted into a 2D array. This process aligns with the ‘info[‘samples’]’ value, a critical piece of information also detailed in the Header Information.</p><p>Having successfully read the complete data, as illustrated in <a href="#figure1">Figure 1</a>, we now turn our attention to the specific characteristics of the data:<br>-The total spatial distance covered by the data is calculated using data.shape[1] * float(info[‘DISTANCE INTERVAL’]), which applies to the distance survey method.<br>-The time duration represented within the data is readily available from info[‘TIMEWINDOW’].<br>-Crucially, the relationship between the time duration and the depth is articulated through a specific equation. However, it’s important to note that this calculation requires the input of relative permittivity, a value that the user must provide.<br>$$\mathrm{1.5e^8 \times info[‘rh\_range’] \times 1e^{-9} / \sqrt{info[‘rh\_epsr’]}}$$</p><figure id="figure1"><br>  <img src="/Figure/Part2Fig/Fig1.svg" width="600" height="auto" alt="About" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 1: Visualization of the 2D Data Reading by Using Python Code</figcaption><br></figure><p>The principal Python code, essential for reading these files, can be found in our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>. We encourage you to join the channel to access this code and engage with a community of like-minded individuals.</p><h3 id="Data-Writting"><a href="#Data-Writting" class="headerlink" title="Data Writting"></a>Data Writting</h3><p>Reversing the data reading process opens the door to efficiently writing data back into MALÅ files. It’s imperative to understand that data designated for writing needs to undergo a format transformation – specifically, from a floating-point format to an integer format. Furthermore, the data type selected for writing must align precisely with the requirements dictated by the file extension. </p><h2 id="Dataset"><a href="#Dataset" class="headerlink" title="Dataset"></a>Dataset</h2><p>Ultimately, we are pleased to showcase a selection of our GPR datasets, amassing over 80 sets in total, meticulously gathered using MALÅ radar system. This extensive dataset is available for download from our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>.</p><figure id="figure2"><br>  <img src="/Figure/Part2Fig/Gallery.jpg" width="800" height="auto" alt="Gallery" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 2: Gallery</figcaption><br></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Understanding-GPR-File-Formats-Part-2-A-Comprehensive-Guide-to-MALA-Data-Reading-and-Writing-Methods&quot;&gt;&lt;a href=&quot;#Understanding-GPR-Fi</summary>
      
    
    
    
    <category term="Algorithm" scheme="http://example.com/categories/Algorithm/"/>
    
    
    <category term="GPR Data" scheme="http://example.com/tags/GPR-Data/"/>
    
  </entry>
  
  <entry>
    <title>GPR File Formats, Part 1 (GSSI)</title>
    <link href="http://example.com/2024/01/03/GSSI/"/>
    <id>http://example.com/2024/01/03/GSSI/</id>
    <published>2024-01-03T17:00:00.000Z</published>
    <updated>2024-01-12T13:52:45.705Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Understanding-GPR-File-Formats-Part-1-A-Comprehensive-Guide-to-GSSI-Data-Reading-and-Writing-Methods"><a href="#Understanding-GPR-File-Formats-Part-1-A-Comprehensive-Guide-to-GSSI-Data-Reading-and-Writing-Methods" class="headerlink" title="Understanding GPR File Formats, Part 1: A Comprehensive Guide to GSSI Data Reading and Writing Methods"></a>Understanding GPR File Formats, Part 1: A Comprehensive Guide to GSSI Data Reading and Writing Methods</h1><p><a href="https://www.linkedin.com/company/geophysical-survey-systems-inc.">Geophysical Survey Systems, Inc. (GSSI)</a> is a world leader in the development, manufacture, and sale of ground penetrating radar (GPR) equipment, primarily used for geophysical, geological, environmental, and forensic investigations. GSSI’s GPR systems are well-regarded for their versatility, reliability, and accuracy in subsurface probing and mapping.</p><h2 id="GSSI-File-Format"><a href="#GSSI-File-Format" class="headerlink" title="GSSI File Format"></a>GSSI File Format</h2><p>The primary file format used by GSSI for GPR data is the .DZT file format. Key characteristics of this format include:</p><ul><li>Proprietary Nature: The .DZT format is specific to GSSI and is designed to work seamlessly with their software and hardware.</li><li>Header Information: Each file includes a header with metadata, such as survey parameters, date, time, and geographic information.</li><li>Data Composition: A .DZT file typically contains raw radar data, including the amplitude of the returned signal, which reflects subsurface structures.</li><li>Compatibility: To read or analyze .DZT files, users generally rely on GSSI’s RADAN software or other specialized GPR data processing software capable of interpreting the .DZT format.</li></ul><h2 id="Data-Reading-and-Writing"><a href="#Data-Reading-and-Writing" class="headerlink" title="Data Reading and Writing"></a>Data Reading and Writing</h2><p>In this discussion, we primarily concentrate on the methodologies for reading and writing .DZT files, without delving into the details of .DZX files.</p><h3 id="Data-Reading"><a href="#Data-Reading" class="headerlink" title="Data Reading"></a>Data Reading</h3><p>The .DZT data files are comprised of two key components: Header Information and Data Composition. The format of the Header Information is detailed in the following <a href="#table1">Table 1</a>.</p><div align="center">Table 1: Data Type Specifications</div><table><thead><tr><th style="text-align:left">Data Types</th><th style="text-align:left">Parameters</th><th style="text-align:center">Discription</th><th style="text-align:center">File Object Start Position</th><th style="text-align:center">Standard Size</th></tr></thead><tbody><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_tag</td><td style="text-align:center">-</td><td style="text-align:center">00</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_data</td><td style="text-align:center">offset to data</td><td style="text-align:center">02</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_nsamp</td><td style="text-align:center">samples per scan</td><td style="text-align:center">04</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_bits</td><td style="text-align:center">bits per data word</td><td style="text-align:center">06</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_zero</td><td style="text-align:center">-</td><td style="text-align:center">08</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_sps</td><td style="text-align:center">scans per second</td><td style="text-align:center">10</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_spm</td><td style="text-align:center">scans per meter</td><td style="text-align:center">14</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_mpm</td><td style="text-align:center">-</td><td style="text-align:center">18</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_position</td><td style="text-align:center">starting point position (ns)</td><td style="text-align:center">22</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_range</td><td style="text-align:center">time duration (ns)</td><td style="text-align:center">26</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_npass</td><td style="text-align:center">-</td><td style="text-align:center">30</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_create</td><td style="text-align:center">date created</td><td style="text-align:center">32</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_modif</td><td style="text-align:center">date modified</td><td style="text-align:center">36</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_rgain</td><td style="text-align:center">-</td><td style="text-align:center">40</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_nrgain</td><td style="text-align:center">number of points in gain function</td><td style="text-align:center">42</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_text</td><td style="text-align:center">-</td><td style="text-align:center">44</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_ntext</td><td style="text-align:center">-</td><td style="text-align:center">46</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_proc</td><td style="text-align:center">-</td><td style="text-align:center">48</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_nproc</td><td style="text-align:center">-</td><td style="text-align:center">50</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_nchan</td><td style="text-align:center">number of channels</td><td style="text-align:center">52</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_epsr</td><td style="text-align:center">relative permittivity</td><td style="text-align:center">54</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_top</td><td style="text-align:center">starting point position (m)</td><td style="text-align:center">58</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">rh_depth</td><td style="text-align:center">measured depth</td><td style="text-align:center">62</td><td style="text-align:center">04</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_reserved</td><td style="text-align:center">-</td><td style="text-align:center">66</td><td style="text-align:center">18</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_spp</td><td style="text-align:center">-</td><td style="text-align:center">84</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_linemun</td><td style="text-align:center">-</td><td style="text-align:center">86</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_start_x</td><td style="text-align:center">-</td><td style="text-align:center">88</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_start_y</td><td style="text-align:center">-</td><td style="text-align:center">90</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_end_x</td><td style="text-align:center">-</td><td style="text-align:center">92</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_end_y</td><td style="text-align:center">-</td><td style="text-align:center">94</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>char</code></td><td style="text-align:left">rh_lineorder</td><td style="text-align:center">-</td><td style="text-align:center">96</td><td style="text-align:center">01</td></tr><tr><td style="text-align:left"><code>char</code></td><td style="text-align:left">rh_dtype</td><td style="text-align:center">-</td><td style="text-align:center">97</td><td style="text-align:center">01</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_antname</td><td style="text-align:center">antenna name</td><td style="text-align:center">98</td><td style="text-align:center">14</td></tr><tr><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">rh_chanmask</td><td style="text-align:center">-</td><td style="text-align:center">112</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_name</td><td style="text-align:center">-</td><td style="text-align:center">114</td><td style="text-align:center">12</td></tr><tr><td style="text-align:left"><code>short</code></td><td style="text-align:left">rh_chksum</td><td style="text-align:center">check placeholder</td><td style="text-align:center">126</td><td style="text-align:center">02</td></tr><tr><td style="text-align:left"><code>char[]</code></td><td style="text-align:left">rh_variable</td><td style="text-align:center">variables</td><td style="text-align:center">128</td><td style="text-align:center">896</td></tr></tbody></table><p>In the ensuing discussion, we explore the data composition. Our initial step involves bypassing the offset, followed by reading the data in accordance with the data type specified by the ‘info[‘rh_bits’]’ value, as detailed in the Header Information. The data is then transformed into a two-dimensional array, aligned with the ‘info[‘rh_nsamp’]’ value, also mentioned in the Header Information. A crucial aspect to highlight is that the first row of this 2D data delineates the trace indices, while the second row is characterized by uniform values, as depicted in <a href="#figure1">Figure 1</a>. Consequently, to ensure a precise analysis, it is imperative to remove these initial two rows from the 2D data.</p><figure id="figure1"><br>  <img src="/Figure/Part1Fig/Fig1.png" width="600" height="auto" alt="About" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 1: Visualization of the 2D Data Reading by Using Python Code</figcaption><br></figure><p>Finally, as depicted in <a href="#figure2">Figure 2</a>, we successfully read the complete data. Following this, we delve into the specifics of data:</p><ul><li>The spatial distance covered by the data can be calculated using data.shape[1]/float(info[‘rh_spm’]), which applies to the distance survey method.</li><li>Alternatively, for the time survey method, the distance is determined by data.shape[1] / float(info[‘rh_sps’]).</li><li>The time duration represented in the data is directly obtained from info[‘rh_range’].</li><li>Similarly, the depth of the data is directly indicated by info[‘rh_depth’].</li><li>Additionally, the relationship between the time duration and depth can be expressed through the next equation, providing a crucial link between these two key parameters.<br>$$\mathrm{1.5e^8 \times info[‘rh\_range’] \times 1e^{-9} / \sqrt{info[‘rh\_epsr’]}}$$</li></ul><figure id="figure2"><br>  <img src="/Figure/Part1Fig/Fig2.png" width="600" height="auto" alt="About" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 2: Visualization of the Complete 2D Data Reading by Using Python Code</figcaption><br></figure><p>The principal Python code utilized for reading DZT files is available for download from our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>.</p><h3 id="Data-Writting"><a href="#Data-Writting" class="headerlink" title="Data Writting"></a>Data Writting</h3><p>By simply reversing the data reading process, we can facilitate the writing of the data. It is crucial to note that data intended for writing must be converted from a float fromat to an integer format. Additionally, the data type must correspond to the value specified by ‘info[‘rh_bits’]’. </p><h2 id="Dataset"><a href="#Dataset" class="headerlink" title="Dataset"></a>Dataset</h2><p>Ultimately, we are pleased to showcase a selection of our GPR datasets, amassing over 500 sets in total, meticulously gathered using GSSI radar system. This extensive dataset is available for download from our <a href="https://t.me/Nephilim_GPR">Telegram channel</a>.</p><figure id="figure3"><br>  <img src="/Figure/Part1Fig/Gallery.svg" width="800" height="auto" alt="Gallery" style="display:block; margin:auto;" /><br>  <figcaption style="text-align:center;">Figure 3: Gallery</figcaption><br></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Understanding-GPR-File-Formats-Part-1-A-Comprehensive-Guide-to-GSSI-Data-Reading-and-Writing-Methods&quot;&gt;&lt;a href=&quot;#Understanding-GPR-Fi</summary>
      
    
    
    
    <category term="Algorithm" scheme="http://example.com/categories/Algorithm/"/>
    
    
    <category term="GPR Data" scheme="http://example.com/tags/GPR-Data/"/>
    
  </entry>
  
</feed>
